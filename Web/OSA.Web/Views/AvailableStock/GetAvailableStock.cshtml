@model OSA.Web.ViewModels.AvailableStocks.View_Models.AvailableStockBindingViewModel
@{
    this.ViewData["Title"] = "Get Available Stock";
}
@{ int index = 0;}
@{ List<int> ids = new List<int>();}
<div id="checkboxes" class="text-center">
    <h3>List of Available Stocks for @Model.Name</h3>
    <div class="col-md-12">
        <form asp-controller="AvailableStock" asp-action="Delete" method="post" class="form-inline" role="form">
            <center>
                <table border="0">
                    <tr>
                        @if (Model.AvailableStocks.Count() != 0)
                        {
                            <th><input type="checkbox" id="checkall" /></th>
                        }
                        <th>ID</th>
                        <th>Stock Name</th>
                        <th>Total Purchased Quantity</th>
                        <th>Total Purchased Price</th>
                        <th>Total Sold Quantity</th>
                        <th>Total Sold Price</th>
                        <th>Book Value</th>
                        <th>Average Price</th>
                        <th>Available Quantity</th>
                        <th>Available Money</th>
                        <th>Date</th>
                    </tr>
                    @foreach (var availableStock in Model.AvailableStocks)
                    {
                        ids.Add(availableStock.Id);
                        <tr>
                            <td>
                                <input type="checkbox" name="ids" id="@availableStock.Id" value="@availableStock.Id" />
                            </td>
                            <td>@(index += 1)</td>
                            <td>@availableStock.StockName</td>
                            <td>@availableStock.TotalPurchasedAmount.ToString("F")</td>
                            <td>@availableStock.TotalPurchasedPrice.ToString("F")</td>
                            <td>@availableStock.TotalSoldQuantity.ToString("F")</td>
                            <td>@availableStock.TotalSoldPrice.ToString("F")</td>
                            <td>@availableStock.BookValue.ToString("F")</td>
                            <td>@Convert.ToDecimal(availableStock.AveragePrice).ToString("F")</td>
                            <td>@availableStock.RemainingQuantity.ToString("F")</td>
                            <td>@availableStock.RemainingPrice.ToString("F")</td>
                            <td>@String.Format("{0:d/M/yyyy}", availableStock.Date)</td>
                        </tr>
                    }
                </table>
                <div align="left" class="col-md-12">Total Purchased Price Sum: @Model.AvailableStocks.Sum(x => x.TotalPurchasedPrice)</div>
                <div align="left" class="col-md-12">Total Sold Price Sum: @Model.AvailableStocks.Sum(x => x.TotalSoldPrice)</div>
                <div align="left" class="col-md-12">Total Book Value Sum: @Model.AvailableStocks.Sum(x => x.BookValue)</div>
                <div align="left" class="col-md-12">Total Available Money Sum: @Model.AvailableStocks.Sum(x => x.RemainingPrice).ToString("F2")</div>
            </center>
            @if (Model.AvailableStocks.Count() != 0)
            {
                <input type="hidden" id="@ids">
                <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to delete available stocks?')">
                    <span class="glyphicon glyphicon-trash" style="vertical-align:middle;margin-top: -5px"></span> Delete
                </button>
            }
        </form>
    </div>
</div>
@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script type="text/javascript">
        function toggleChecked(status) {
            $("#checkboxes input").each(function () {
                // Set the checked status of each to match the
                // checked status of the check all checkbox:
                $(this).prop("checked", status);
            });
        }
        $(document).ready(function () {
            // Grab a reference to the check all box:
            var checkAllBox = $("#checkall");
            //Set the default value of the global checkbox to true:
            checkAllBox.prop('checked', false);
            // Attach the call to toggleChecked to the
            // click event of the global checkbox:
            checkAllBox.click(function () {
                var status = checkAllBox.prop('checked');
                toggleChecked(status);
            });
        });
    </script>
}
